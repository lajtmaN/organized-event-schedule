datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Event {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  startDate DateTime
  endDate   DateTime

  published Boolean @default(false)

  activities Activity[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Activity {
  id                           String                @id @default(uuid())
  activityType                 String // tournament, mystery, activity
  name                         String
  dayOfWeek                    String
  startTimeMinutesFromMidnight Int
  durationMinutes              Int?
  Registration                 ActivityRegistration?
  Announcement                 ActivityAnnouncement?
  Countdown                    ActivityCountdown?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event   @relation(fields: [eventId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  eventId   String
}

model ActivityRegistration {
  activityId String   @id
  Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  deadlineMinutesBeforeStart Int @default(10)
}

model ActivityAnnouncement {
  activityId String   @id
  Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  announcedAt   DateTime?
  customMessage String?
}

model ActivityCountdown {
  activityId String   @id
  Activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  startCountdownMinutesBefore Int @default(10)
}

model Asset {
  id        String   @id @default(uuid())
  name      String
  url       String
  type      String // sponsor/logo 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}